Program:Program[t] "Program"
DuplexBrokerFactory:DuplexBrokerFactory "DuplexBrokerFactory"
WebSocketMessagingSystemFactory:WebSocketMessagingSystemFactory "WebSocketMessagingSystemFactory"
/Broker:Broker "Broker"
/DuplexInputChannel:DuplexInputChannel "DuplexInputChannel"
SingleThreadExecutor:SingleThreadExecutor[t] "SingleThreadExecutor"
/WebSocket:WebSocket WebSocket
/WebSocketDuplexOutputChannel:WebSocketDuplexOutputChannel "WebSocketDuplexOutputChannel"
/EneterProtocolFormatter:EneterProtocolFormatter "EneterProtocolFormatter"
/DuplexBrokerClient:DuplexBrokerClient "DuplexBrokerClient"
/BrokerCustomSerializer:BrokerCustomSerializer "BrokerCustomSerializer"
/MainController:MainController "MainController"
AngularFramework:AngularFramework "AngularFramework"
JavascriptEventLoop:JavascriptEventLoop[t] "JavascriptEventLoop"

Program:DuplexBrokerFactory.createBroker()
DuplexBrokerFactory:Broker.new()
Program:WebSocketMessagingSystemFactory.createDuplexInputChannel()
WebSocketMessagingSystemFactory:DuplexInputChannel.new
Program:Broker.attachDuplexInputChannel()
JavascriptEventLoop:AngularFramework.init()
AngularFramework:MainController.new()
JavascriptEventLoop:AngularFramework.handleEvent()
AngularFramework:MainController.openConnection
MainController:DuplexBrokerClient.new()
DuplexBrokerClient:BrokerCustomSerializer.new()
MainController:WebSocketDuplexOutputChannel.new()
WebSocketDuplexOutputChannel:EneterProtocolFormatter.new()
MainController:DuplexBrokerClient.attachDuplexOutputChannel()
DuplexBrokerClient:WebSocketDuplexOutputChannel.openConnection()
WebSocketDuplexOutputChannel:WebSocket.new()
JavascriptEventLoop:WebSocket.handleEvent()
WebSocket:WebSocketDuplexOutputChannel.onopen
WebSocketDuplexOutputChannel:EneterProtocolFormatter.encodeOpenConnectionMessage
WebSocketDuplexOutputChannel:WebSocket.send(openConnection)
SingleThreadExecutor:Program.ResponseReceiverConnected
SingleThreadExecutor:_
WebSocketDuplexOutputChannel:WebSocketDuplexOutputChannel.onConnectionOpened()
JavascriptEventLoop:AngularFramework.handleEvent()
AngularFramework:MainController.subscribe()
MainController:DuplexBrokerClient.subscribe("MyCpuUpdate")
DuplexBrokerClient:DuplexBrokerClient.getAttachedDuplexOutputChannel
DuplexBrokerClient[1]:DuplexBrokerClient.send
DuplexBrokerClient:BrokerCustomSerializer.serialize
DuplexBrokerClient:WebSocketDuplexOutputChannel.sendMessage()
WebSocketDuplexOutputChannel:EneterProtocolFormatter.encodeRequestMessage()
WebSocketDuplexOutputChannel:WebSocket.send()
JavascriptEventLoop:_
Program:>Program.sendMonitoringMessages()
Program:Broker.sendMessage("MyCpuUpdate", message)
Program:stop
Program:_
JavascriptEventLoop:WebSocket._
WebSocket:WebSocketDuplexOutputChannel.onmessage
WebSocketDuplexOutputChannel:EneterProtocolFormatter.decodeMessage()
WebSocketDuplexOutputChannel:DuplexBrokerClient._onResponseMessageReceived
DuplexBrokerClient:BrokerCustomSerializer.deserialize
DuplexBrokerClient:MainController.onBrokerMessageReceived
JavascriptEventLoop:AngularFramework.handleEvent()
AngularFramework:MainController.unsubscribe()
MainController:DuplexBrokerClient.unsubscribe()
DuplexBrokerClient:DuplexBrokerClient.getAttachedDuplexOutputChannel()
DuplexBrokerClient[1]:DuplexBrokerClient.send()
DuplexBrokerClient:BrokerCustomSerializer.serialize()
DuplexBrokerClient:WebSocketDuplexOutputChannel.sendMessage()
WebSocketDuplexOutputChannel:EneterProtocolFormatter.encodeRequestMessage
WebSocketDuplexOutputChannel:WebSocket.send()
JavascriptEventLoop:_
Program[0,0]:Broker.DetachDuplexInputChannel()


